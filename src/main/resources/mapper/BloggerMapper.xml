<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssm.blog.dao.BloggerMapper">
  <resultMap id="BaseResultMap" type="ssm.blog.entity.Blogger">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
    <result column="imagename" jdbcType="VARCHAR" property="imagename" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="ssm.blog.entity.Blogger">
    <result column="profile" jdbcType="LONGVARCHAR" property="profile" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, nickname, sign, imagename
  </sql>
  <sql id="Blob_Column_List">
    profile
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_blogger
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_blogger
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="ssm.blog.entity.Blogger">
    insert into t_blogger (id, username, password, 
      nickname, sign, imagename, 
      profile)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, #{imagename,jdbcType=VARCHAR}, 
      #{profile,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="ssm.blog.entity.Blogger">
    insert into t_blogger
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="sign != null">
        sign,
      </if>
      <if test="imagename != null">
        imagename,
      </if>
      <if test="profile != null">
        profile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="imagename != null">
        #{imagename,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        #{profile,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ssm.blog.entity.Blogger">
    update t_blogger
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="imagename != null">
        imagename = #{imagename,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        profile = #{profile,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="ssm.blog.entity.Blogger">
    update t_blogger
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      imagename = #{imagename,jdbcType=VARCHAR},
      profile = #{profile,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ssm.blog.entity.Blogger">
    update t_blogger
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      imagename = #{imagename,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>